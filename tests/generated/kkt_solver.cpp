

// ------- Generated from kkt_test.py ---
int kkt_test_simple() {

// Problem
int n = 2;
int r = 2;
Eigen::MatrixXd g(n,n);
cvxopt::ScalingMatrix w;
w.d.resize(2*r*n);
Eigen::VectorXd x(n*(r+1)), y, z(2*n*r);
x <<  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ;
z <<  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ;
g <<  1.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  1.000000000000000e+00 ;
w.d.diagonal() <<  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ;

// Solve
KQP_KKTPreSolver kkt_presolver(g);
boost::shared_ptr<cvxopt::KKTSolver> kktSolver(kkt_presolver.get(w));
kktSolver->solve(x,y,z);


// Solution
Eigen::VectorXd s_x(n*(r+1)), s_z(2*n*r);
s_x <<  3.333333333333334e-01 ,  3.333333333333334e-01 ,  3.333333333333334e-01 ,  3.333333333333334e-01 ,  2.500000000000002e-01 ,  2.500000000000002e-01 ;
s_z <<  -5.833333333333335e-01 ,  -5.833333333333335e-01 ,  -5.833333333333335e-01 ,  -5.833333333333335e-01 ,  8.333333333333318e-02 ,  8.333333333333318e-02 ,  8.333333333333318e-02 ,  8.333333333333318e-02 ;

            double error_x = (x - s_x).norm() / (double)x.rows();
            double error_z = (z - s_z).norm() / (double)z.rows();

            KQP_LOG_INFO(logger, "Average error (x): " << convert(error_x));
            KQP_LOG_INFO(logger, "Average error (z): " << convert(error_z));
            KQP_LOG_ASSERT(logger, error_x < EPSILON, "Error for x is too high");
            KQP_LOG_ASSERT(logger, error_z < EPSILON, "Error for z is too high");
            return 0;
        }



// ------- Generated from kkt_test.py ---
int kkt_test_diagonal_g() {

// Problem
int n = 5;
int r = 10;
Eigen::MatrixXd g(n,n);
cvxopt::ScalingMatrix w;
w.d.resize(2*r*n);
Eigen::VectorXd x(n*(r+1)), y, z(2*n*r);
x <<  6.652938424131702e-01 ,  1.698441191467233e-01 ,  5.533240950406658e-01 ,  1.098429853687587e-01 ,  1.425720873961245e-01 ,  7.796947735777706e-01 ,  2.935680502489946e-02 ,  7.206541116519231e-01 ,  3.082616489476906e-01 ,  9.887593665668145e-01 ,  9.487010553331180e-01 ,  5.257701694135350e-01 ,  8.083341575479408e-03 ,  7.302472163109113e-01 ,  5.838245445721751e-01 ,  8.391933610109799e-01 ,  5.159745955324619e-01 ,  2.405106952478940e-01 ,  7.898845113120780e-01 ,  9.813948487610342e-01 ,  9.478315328524878e-01 ,  4.965706675522105e-01 ,  1.456916323409392e-01 ,  6.044981400559089e-01 ,  1.478547690240999e-01 ,  3.562288079626108e-01 ,  4.866290155540363e-01 ,  1.956662589769220e-01 ,  7.054661859928965e-01 ,  9.101546057306099e-01 ,  6.229099775941499e-01 ,  7.180658297107649e-01 ,  5.116137598108658e-01 ,  8.270300493585381e-02 ,  2.868487464204186e-01 ,  6.713084342205645e-01 ,  4.540122396116564e-01 ,  9.569122354925048e-01 ,  1.329918956216162e-01 ,  1.245034982738824e-02 ,  3.436028273080871e-02 ,  1.117061082508992e-01 ,  6.012044603595580e-01 ,  9.736677018783485e-01 ,  5.414822457405534e-01 ,  9.905516570090445e-02 ,  3.806311141396801e-02 ,  5.828223936912738e-01 ,  3.810023251873313e-01 ,  4.483984208956254e-01 ,  6.392171198744823e-02 ,  1.704513929090651e-01 ,  5.242820594123946e-01 ,  4.105288211378180e-01 ,  8.627740313990989e-01 ;
z <<  6.153289981503229e-02 ,  9.686064458048235e-01 ,  5.704214027565144e-01 ,  4.808573751059229e-01 ,  8.976262926420442e-01 ,  4.919059530446629e-01 ,  9.804362807391672e-01 ,  2.077766191577451e-01 ,  4.584156162653774e-01 ,  8.228449753661128e-01 ,  6.287245896478376e-01 ,  6.807539144485515e-01 ,  4.888045308998973e-01 ,  6.208633214061975e-01 ,  6.070459789606872e-01 ,  7.971098118144306e-01 ,  3.572041735956185e-01 ,  8.869961683463683e-01 ,  3.910290112669019e-01 ,  4.875844431203550e-01 ,  6.178525922789745e-01 ,  4.018221677278997e-01 ,  8.145170570496644e-01 ,  9.052818264823553e-01 ,  2.430642456250965e-01 ,  1.152915809217002e-01 ,  3.514147432996110e-01 ,  6.101763129655250e-01 ,  4.795123894411285e-01 ,  8.904319281257396e-01 ,  9.312521975793812e-01 ,  7.108828586376096e-01 ,  5.305750424511426e-01 ,  4.938612355627597e-01 ,  2.773578750426821e-01 ,  4.244454412877477e-01 ,  6.585572907866256e-01 ,  9.276073881123842e-01 ,  6.324730468268872e-01 ,  9.487235844506693e-01 ,  9.091478867900252e-01 ,  5.062950770090636e-01 ,  5.488710531135678e-01 ,  3.366696467974454e-01 ,  2.784059989902606e-01 ,  7.312775792881696e-01 ,  6.744846952687601e-01 ,  1.618876227087290e-01 ,  8.551425862452141e-01 ,  5.197718644629753e-01 ,  6.374133635708549e-01 ,  5.867290396176589e-01 ,  3.553276201881722e-01 ,  4.075428168861749e-01 ,  5.091063694419758e-01 ,  4.161264231152548e-01 ,  6.506966779884346e-01 ,  6.011507250597354e-01 ,  9.191093982979274e-01 ,  9.337024855087190e-01 ,  2.934835532826465e-01 ,  6.362295275914742e-02 ,  9.387964337855537e-02 ,  1.548227431298965e-02 ,  6.222651402398884e-01 ,  6.675748141452964e-02 ,  9.435445243704564e-01 ,  5.952695447562621e-01 ,  2.020072015426286e-01 ,  8.377123644279709e-01 ,  3.002512176508135e-01 ,  8.868042236976303e-01 ,  2.931404240572033e-03 ,  6.347291458250517e-01 ,  9.429986925601290e-01 ,  8.698024073496942e-01 ,  9.218101100479639e-01 ,  6.765432676458176e-01 ,  7.010581668053346e-01 ,  4.359674934454096e-01 ,  1.235373221295201e-01 ,  7.850281752345929e-01 ,  3.867559140742707e-01 ,  1.166359913242366e-01 ,  6.096128324349689e-01 ,  2.525588700581378e-01 ,  4.973410497272323e-01 ,  9.537771384173900e-01 ,  1.264803499688510e-01 ,  7.645753417020094e-01 ,  8.530213304900603e-01 ,  7.981506669835758e-01 ,  5.672728143361812e-01 ,  4.684898533770477e-01 ,  8.269940472609545e-01 ,  3.131139138830062e-01 ,  8.437679433778299e-01 ,  1.022362180802240e-01 ,  5.900459211547155e-01 ,  1.192738538524434e-01 ;
g <<  1.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  1.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  1.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  1.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  0.000000000000000e+00 ,  1.000000000000000e+00 ;
w.d.diagonal() <<  9.052333981627330e-01 ,  6.552772327451212e-01 ,  5.964506923448727e-01 ,  8.471635628949399e-01 ,  6.046289477580892e-01 ,  3.654252014918626e-01 ,  6.626809727432659e-01 ,  3.284959131050500e-01 ,  4.866987479044875e-01 ,  4.687110068312025e-01 ,  8.533610006522608e-01 ,  5.492196112983158e-01 ,  8.700557696960062e-01 ,  8.464252970603241e-01 ,  3.489983454657578e-01 ,  1.917421132213715e-05 ,  8.928479951365664e-01 ,  2.543486680331313e-01 ,  1.493023624857797e-01 ,  5.656342174048352e-01 ,  7.622505105129982e-01 ,  5.429728187007019e-01 ,  5.388110716230856e-01 ,  3.803262224289550e-01 ,  9.141356706241107e-01 ,  8.970271428223342e-01 ,  9.407184301172388e-01 ,  9.390844616217311e-01 ,  5.038428854592883e-01 ,  8.295340401925900e-01 ,  6.904597652877998e-01 ,  7.062555516939154e-01 ,  2.346425450333263e-01 ,  8.681746969241622e-01 ,  8.081494907329140e-01 ,  2.235600451518899e-01 ,  4.920913121473685e-01 ,  6.749604564900220e-01 ,  1.990836749205959e-01 ,  4.925828554830143e-01 ,  6.533361252959531e-01 ,  7.383161772904118e-01 ,  1.430461119404176e-01 ,  6.394052444419347e-01 ,  3.889302955966134e-02 ,  1.140300958233187e-02 ,  7.866249748137388e-01 ,  1.786370012464678e-02 ,  2.846363568124421e-01 ,  7.836891928135280e-01 ,  3.832347859965536e-01 ,  4.773658968845884e-01 ,  6.553993603592012e-01 ,  5.863269622775031e-01 ,  6.194534038993000e-01 ,  5.062438018218840e-01 ,  4.052947488627290e-02 ,  7.176557485698750e-01 ,  5.357257013751462e-01 ,  2.804164957352373e-02 ,  3.011888488226144e-01 ,  2.961733090996205e-01 ,  4.469836703319577e-01 ,  4.091319670332141e-01 ,  7.118339738154388e-01 ,  1.825006079119454e-01 ,  9.217763291042116e-01 ,  7.683375889579660e-01 ,  5.469080111944815e-01 ,  3.051615080388070e-02 ,  2.817227305612896e-01 ,  8.701462254291022e-01 ,  4.013452953668030e-01 ,  1.669254648473045e-01 ,  2.870840400545971e-02 ,  3.923610064796028e-01 ,  1.477475276399562e-01 ,  1.747102585382321e-02 ,  6.643344297913977e-01 ,  6.829630648849927e-01 ,  9.776273086748353e-01 ,  7.441008382750098e-01 ,  2.986301320456105e-01 ,  8.363370267513242e-01 ,  3.877380800488541e-01 ,  9.800217660966277e-01 ,  2.934084357395607e-01 ,  5.192388147851451e-01 ,  2.818388801878400e-01 ,  1.183918117032593e-01 ,  5.694777551129186e-01 ,  8.037598090874956e-01 ,  9.637233642594367e-02 ,  8.492067699017316e-01 ,  1.662004678055838e-01 ,  6.085711734676928e-01 ,  9.311829953297460e-01 ,  1.343380631171230e-01 ,  4.114727837984633e-01 ,  1.347686768949147e-01 ;

// Solve
KQP_KKTPreSolver kkt_presolver(g);
boost::shared_ptr<cvxopt::KKTSolver> kktSolver(kkt_presolver.get(w));
kktSolver->solve(x,y,z);


// Solution
Eigen::VectorXd s_x(n*(r+1)), s_z(2*n*r);
s_x <<  2.628480851342097e-01 ,  -1.013876080188401e-01 ,  -1.023345186911162e-02 ,  -3.260985864525290e-02 ,  -1.433393868453355e-01 ,  2.911393614142199e-02 ,  3.193285360975251e-02 ,  1.957936762344594e-01 ,  2.255717537713318e-01 ,  3.364506638093082e-01 ,  -8.172374517168646e-02 ,  -3.815657740352787e-01 ,  -1.895738243201534e-01 ,  -2.933481248977918e-01 ,  4.858814870516592e-02 ,  -3.395722180301499e-01 ,  3.573547285815278e-01 ,  -4.352273174556548e-01 ,  1.176939893654160e-01 ,  2.422627024821900e-01 ,  -8.549416545272437e-02 ,  2.771672671874645e-01 ,  -3.339749763908512e-01 ,  4.255488346629011e-02 ,  3.470923477764413e-01 ,  3.958943966777300e-01 ,  3.074155728101985e-01 ,  3.448347493033861e-01 ,  1.785455885939826e-01 ,  3.031455230569136e-02 ,  -1.738019692107050e-01 ,  1.732263960048019e-01 ,  -8.180553157474268e-02 ,  -1.224539147124895e-01 ,  9.437039237321510e-02 ,  5.079500993617259e-02 ,  -6.626622746189292e-02 ,  2.833935259824103e-01 ,  -1.951080074052504e-01 ,  1.386581342562772e-01 ,  3.047330178971852e-02 ,  1.358340512245393e-01 ,  9.754264371657795e-02 ,  2.809580550845882e-01 ,  3.131990800321981e-01 ,  -2.736461550455483e-01 ,  5.486811327972027e-02 ,  1.627624952930875e-01 ,  -1.713700728951728e-01 ,  -4.448479870586263e-01 ,  -4.575375939161608e-01 ,  -6.172817573246091e-01 ,  -3.314471582978619e-01 ,  -5.267088156133378e-01 ,  -5.957476529647260e-01 ;
s_z <<  1.470964385949239e-01 ,  -3.814218898073486e-01 ,  -3.835032728192080e-01 ,  9.261647052494638e-02 ,  -2.622091671591848e-01 ,  -1.737217220124808e-01 ,  -5.961954443761799e-01 ,  -2.195556602595487e-01 ,  -3.231538094160791e-01 ,  -1.202335720726195e+00 ,  -1.048363476788953e-01 ,  5.791738138399425e-01 ,  3.702803066218897e-02 ,  2.353351439243854e-01 ,  -1.715952968808641e-01 ,  6.877985557018094e-06 ,  -1.089515184918551e-01 ,  -4.730580801672546e-01 ,  1.204657091928655e-01 ,  -2.370781125177959e-01 ,  -9.815779967104835e-02 ,  -1.136478207848738e-01 ,  -2.767109478872170e-01 ,  -1.107280722443414e+00 ,  6.116225132502468e-03 ,  -5.980686773253530e-02 ,  -4.416683829615446e-02 ,  -6.640125882758183e-01 ,  -2.606946852133067e-01 ,  -3.917847993208948e-01 ,  -4.343665620074256e-01 ,  -3.778058759011966e-01 ,  -5.000046030095444e-01 ,  1.788827701536132e-01 ,  2.772004290266455e-01 ,  -7.918614122542252e-02 ,  5.078466817636574e-02 ,  -1.303118941768607e+00 ,  4.487749998955765e-01 ,  -9.980738474142311e-01 ,  -7.378798997915583e-01 ,  -3.365410602295425e-02 ,  -2.201853194468334e+00 ,  -1.421929004477412e-01 ,  1.065119891448135e-01 ,  -8.228558064706810e-03 ,  -1.424707513900230e-01 ,  3.804945363287746e-01 ,  -5.518047641405112e-01 ,  6.645795046510262e-01 ,  2.165051777952687e-01 ,  -1.483869936545037e-01 ,  -5.205057530224820e-02 ,  1.476243557787196e-01 ,  -9.152924653522743e-02 ,  1.393105588424395e-01 ,  -3.656763523908558e-02 ,  -1.029879446722189e-01 ,  -3.114071781231094e-01 ,  -5.364052249284137e-02 ,  2.733510745290453e-01 ,  5.810551634559948e-01 ,  1.073723578391801e-01 ,  5.325382369470747e-01 ,  3.100534990161309e-02 ,  2.805902679304400e-01 ,  3.373048379957433e-02 ,  -9.098210395538754e-01 ,  8.089031324845748e-01 ,  9.765026423551173e-03 ,  2.548328658805339e-01 ,  8.785650722869331e-03 ,  -1.360230802898002e-02 ,  -3.921837019013711e-01 ,  -5.527713032451779e-03 ,  -4.172284321187874e-02 ,  1.954157969992944e-02 ,  -1.495962782932169e-02 ,  6.316453300943013e-03 ,  2.783382024575788e-01 ,  1.638643899924226e-01 ,  7.364563796920433e-03 ,  -4.591441808364135e-01 ,  3.439031160605687e-01 ,  2.076278215769483e-01 ,  2.609878092942038e-01 ,  1.829343454294110e-01 ,  -6.527563897112845e-01 ,  7.277933339166262e-01 ,  -2.548280497356074e-01 ,  -6.409564403649192e-01 ,  -5.603024426607647e-02 ,  -1.434882845535290e+00 ,  3.994045141210157e-01 ,  4.930953974921103e-01 ,  -2.123374892637006e-01 ,  -1.843011240907897e-01 ,  2.917813659178524e+00 ,  -5.704075401290893e-01 ,  2.346673780756664e-01 ;

            double error_x = (x - s_x).norm() / (double)x.rows();
            double error_z = (z - s_z).norm() / (double)z.rows();

            KQP_LOG_INFO(logger, "Average error (x): " << convert(error_x));
            KQP_LOG_INFO(logger, "Average error (z): " << convert(error_z));
            KQP_LOG_ASSERT(logger, error_x < EPSILON, "Error for x is too high");
            KQP_LOG_ASSERT(logger, error_z < EPSILON, "Error for z is too high");
            return 0;
        }



// ------- Generated from kkt_test.py ---
int kkt_test_diagonal_d() {

// Problem
int n = 5;
int r = 10;
Eigen::MatrixXd g(n,n);
cvxopt::ScalingMatrix w;
w.d.resize(2*r*n);
Eigen::VectorXd x(n*(r+1)), y, z(2*n*r);
x <<  9.693881604049188e-01 ,  6.133268205467090e-01 ,  4.426063286462090e-02 ,  4.055144158407464e-03 ,  1.339725270491339e-01 ,  9.410022713958340e-01 ,  3.028605620290723e-01 ,  3.661456016604264e-01 ,  8.981962445391883e-01 ,  3.143638049564507e-01 ,  5.489821840124055e-01 ,  4.360309576241223e-01 ,  6.499417612685054e-02 ,  5.845462257019302e-01 ,  8.440678976619022e-01 ,  1.564189183874064e-01 ,  2.242989686860415e-01 ,  4.128702077148407e-01 ,  3.692486905862902e-02 ,  4.966034986165482e-01 ,  8.179828644296319e-01 ,  6.578909387591091e-01 ,  5.334837356527721e-01 ,  8.551257407736000e-01 ,  1.496881349714015e-01 ,  5.672354768631239e-01 ,  3.741748177480889e-01 ,  6.013045471136395e-01 ,  1.129157018944362e-01 ,  7.755127010728279e-01 ,  9.660583318435267e-02 ,  1.663637457932475e-01 ,  8.074497520247557e-01 ,  9.476939242234907e-01 ,  4.332315025514858e-01 ,  4.140808317483012e-01 ,  2.454818761407551e-01 ,  2.747033919655770e-01 ,  6.172527709741663e-01 ,  1.784604107207253e-01 ,  1.194825043307771e-01 ,  4.557348586810382e-01 ,  1.649378065796322e-01 ,  6.487248312162270e-01 ,  8.210556743614970e-01 ,  7.775113893753993e-01 ,  4.801333902243475e-01 ,  3.475712562208170e-01 ,  4.347105489944344e-01 ,  5.008574909348362e-03 ,  7.125732007896374e-01 ,  3.316572226354955e-01 ,  3.194232377605339e-01 ,  7.992503242021254e-02 ,  4.480559260010161e-01 ;
z <<  5.828489673005941e-01 ,  3.905869418428840e-01 ,  8.695455453974028e-01 ,  6.733532167485129e-01 ,  2.414082418108049e-01 ,  5.253538488765902e-01 ,  9.105338176465975e-01 ,  5.201096943214129e-01 ,  6.021048687389493e-01 ,  6.277362381152096e-02 ,  4.893861165217643e-01 ,  4.614412627964344e-01 ,  4.011298800689024e-01 ,  4.204353581465221e-01 ,  5.849350493343958e-01 ,  5.386670484231432e-01 ,  4.898957587909363e-01 ,  1.657964405322077e-01 ,  4.413468174535875e-01 ,  9.686781985609425e-01 ,  4.151736932178327e-01 ,  3.531782978783116e-02 ,  2.830426682370324e-03 ,  5.354184513162129e-01 ,  5.057294182209637e-02 ,  9.274340534219172e-02 ,  1.087564126269691e-01 ,  4.540783303488197e-01 ,  9.926880657637538e-01 ,  4.850553508050713e-01 ,  4.586402838083844e-01 ,  4.365108145371187e-01 ,  5.011121848422556e-01 ,  4.470874692740242e-01 ,  7.262152005666610e-01 ,  8.979415356273188e-01 ,  6.978703473377672e-01 ,  4.233106026677405e-01 ,  6.495291182373754e-01 ,  9.095405975236686e-01 ,  1.536273415359948e-01 ,  2.373424569000443e-01 ,  6.191120001144675e-01 ,  6.870199456481508e-01 ,  6.426002227117794e-01 ,  5.885285628983279e-01 ,  8.294231938453709e-01 ,  4.789429532356768e-01 ,  8.075888612596384e-01 ,  9.623558468839565e-01 ,  4.353566829205651e-01 ,  8.588455784808138e-01 ,  7.182423791983076e-01 ,  8.886814943629995e-01 ,  4.623588619564345e-02 ,  9.130986448423635e-01 ,  7.668385355448595e-01 ,  9.623789273619899e-01 ,  9.813193590694200e-01 ,  2.854857307868702e-01 ,  6.700013166466804e-01 ,  1.412735310270223e-01 ,  5.951327636887873e-01 ,  9.195796756956715e-01 ,  1.919733210344334e-01 ,  3.498686863671552e-01 ,  7.974567705000712e-02 ,  1.946563156451762e-01 ,  2.077026664188026e-01 ,  9.600092980546204e-02 ,  9.996980377175202e-01 ,  8.875339549944073e-01 ,  4.637599726257671e-01 ,  7.437024470523893e-01 ,  6.952367933641160e-01 ,  5.224546098893470e-01 ,  4.234867948861591e-01 ,  6.640733237821220e-01 ,  5.555198729672033e-01 ,  2.658898278886870e-01 ,  3.643255465919335e-01 ,  6.272667630222782e-01 ,  6.271288917045859e-01 ,  2.095937611451607e-01 ,  6.097729907070338e-01 ,  8.749287603932815e-01 ,  8.713374496408887e-01 ,  6.522633075694795e-01 ,  7.017267325726095e-02 ,  4.235180899286221e-01 ,  8.902228492414066e-02 ,  5.524979791048534e-02 ,  2.546980854885439e-01 ,  4.568737627876636e-01 ,  7.593995049120491e-01 ,  6.288415398407439e-01 ,  2.824846019348571e-01 ,  6.950690619200575e-01 ,  5.065069608344968e-01 ,  5.075296156707131e-01 ;
g <<  1.901542784951112e+00 ,  1.705578134902462e+00 ,  9.737025195080641e-01 ,  1.491484345212421e+00 ,  1.899076985882573e+00 ,  1.705578134902462e+00 ,  2.102495915993846e+00 ,  1.498420504776956e+00 ,  1.236851733837826e+00 ,  2.207127188738190e+00 ,  9.737025195080641e-01 ,  1.498420504776956e+00 ,  1.451111383108529e+00 ,  5.405111652925707e-01 ,  1.640097457241883e+00 ,  1.491484345212421e+00 ,  1.236851733837826e+00 ,  5.405111652925707e-01 ,  1.360710787966147e+00 ,  1.439290005698094e+00 ,  1.899076985882573e+00 ,  2.207127188738190e+00 ,  1.640097457241883e+00 ,  1.439290005698094e+00 ,  2.682633976423498e+00 ;
w.d.diagonal() <<  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ,  1.000000000000000e+00 ;

// Solve
KQP_KKTPreSolver kkt_presolver(g);
boost::shared_ptr<cvxopt::KKTSolver> kktSolver(kkt_presolver.get(w));
kktSolver->solve(x,y,z);


// Solution
Eigen::VectorXd s_x(n*(r+1)), s_z(2*n*r);
s_x <<  2.076371594295575e-01 ,  3.495031279755610e-01 ,  -1.395512019185771e-01 ,  -4.810776549138022e-02 ,  -1.983494851280507e-01 ,  2.940282376455126e-01 ,  -2.246871049544440e-01 ,  2.365798467829285e-01 ,  3.297401036000611e-01 ,  -8.285912838007103e-02 ,  1.125019468851556e-01 ,  -1.308312253779721e-01 ,  5.206893300271351e-02 ,  3.132203317179372e-01 ,  -2.134600282539837e-03 ,  4.203770502170799e-02 ,  -5.771152436641663e-02 ,  2.097995063475935e-01 ,  -3.244817743051857e-02 ,  -1.336681953610273e-01 ,  2.181438781269179e-01 ,  2.449243000384934e-01 ,  1.617333075837322e-01 ,  1.639854346660682e-01 ,  -1.413264630318153e-01 ,  2.909735267332807e-01 ,  7.286276123769003e-02 ,  1.682022112762752e-01 ,  -2.762566356536453e-01 ,  -7.539759850638159e-03 ,  -1.398227098876807e-01 ,  -1.237463540278320e-02 ,  3.008528079687820e-01 ,  2.521027311172826e-01 ,  -5.267144314723136e-02 ,  1.232572631593528e-01 ,  1.141786192162639e-01 ,  1.707337116648823e-01 ,  -1.693987896921493e-02 ,  -2.240795237637296e-01 ,  -1.105316910982257e-01 ,  3.986972365689961e-04 ,  -1.728035404438059e-01 ,  8.111408503252358e-02 ,  2.805154393478925e-01 ,  3.176242174339149e-01 ,  -9.538784482501252e-02 ,  2.405859967433750e-01 ,  9.618909853097282e-03 ,  -2.671373164388740e-01 ,  -4.938966856448117e-01 ,  -4.630042148984120e-01 ,  -4.971973924717768e-01 ,  -5.858149906878793e-01 ,  -4.533561019061757e-01 ;
s_z <<  -2.965894410853402e-01 ,  -2.770858549200328e-01 ,  -2.327969510070496e-01 ,  -3.943046056925317e-02 ,  4.102973452234213e-01 ,  -3.254854008772913e-01 ,  -2.228424977937427e-01 ,  -2.594921486325631e-01 ,  -3.460299816511301e-01 ,  4.734416064747262e-01 ,  -1.079913777621085e-01 ,  1.323941774799497e-01 ,  4.399857940016123e-02 ,  -1.478406991765791e-01 ,  -1.294443471456805e-01 ,  -8.680806780003854e-02 ,  3.081998047389243e-02 ,  1.216014455919757e-01 ,  1.769163506648096e-01 ,  -3.816539012937399e-01 ,  -1.394208856999388e-01 ,  1.827620850720875e-01 ,  3.326336582056753e-01 ,  -1.135888952944021e-01 ,  5.441096231158952e-01 ,  1.101797535693390e-01 ,  2.813850410337533e-01 ,  -1.250831491533188e-01 ,  -1.306164394222296e-01 ,  -2.415948904825771e-02 ,  1.750791117241079e-01 ,  3.886803576407621e-02 ,  -3.047676003392596e-01 ,  -1.133752097034280e-01 ,  -2.201876555132538e-01 ,  -5.273021131418597e-01 ,  -3.490447516556191e-01 ,  -9.684692186084581e-02 ,  -4.677424858028065e-02 ,  -2.321049718537634e-01 ,  4.508010352070416e-01 ,  2.252630607617994e-01 ,  5.088893280111486e-02 ,  -1.823190399927943e-01 ,  -4.697595601534969e-01 ,  -4.122560946874312e-01 ,  -2.710311341219463e-01 ,  -2.223315575072757e-01 ,  -2.313927804248558e-01 ,  -2.418624285389065e-01 ,  2.661771621538055e-01 ,  -4.633823560684119e-02 ,  -3.605961886451075e-01 ,  -3.509742691665009e-01 ,  2.087707305824818e-01 ,  -1.251737215520381e-01 ,  -5.285214256008900e-01 ,  -2.286016881072855e-01 ,  -6.576426478148054e-02 ,  8.501124273923422e-02 ,  -6.360268411671254e-02 ,  1.908994584934180e-01 ,  -4.586643821429742e-02 ,  -2.054435328985561e-02 ,  2.592481805892024e-01 ,  1.860657042993631e-01 ,  3.255470134819881e-01 ,  5.123405831741948e-01 ,  3.456641468385592e-01 ,  2.236869767396860e-01 ,  -2.876574739457898e-01 ,  -1.796054400575020e-01 ,  1.951707274297427e-01 ,  6.097978301558825e-03 ,  -3.832071544897558e-01 ,  2.624156024887456e-01 ,  1.123801812499428e-01 ,  1.326279965930228e-03 ,  -2.459615179329688e-01 ,  1.799265141668505e-01 ,  -1.025157083480333e-02 ,  -1.766371835266502e-01 ,  1.709213087359735e-01 ,  6.283239606600017e-01 ,  -2.090883319480902e-01 ,  -2.577748115891162e-01 ,  -2.941546155262131e-01 ,  1.566779656718113e-02 ,  4.987024384614033e-01 ,  -1.942415117861763e-01 ,  2.943427096224447e-01 ,  4.081531142244952e-01 ,  6.969576653942731e-02 ,  2.100553129327384e-01 ,  -2.552796365798094e-02 ,  1.826793632379830e-01 ,  8.513176813854215e-02 ,  4.271432729509511e-02 ,  8.892693970647939e-02 ,  -3.213108302034120e-01 ;

            double error_x = (x - s_x).norm() / (double)x.rows();
            double error_z = (z - s_z).norm() / (double)z.rows();

            KQP_LOG_INFO(logger, "Average error (x): " << convert(error_x));
            KQP_LOG_INFO(logger, "Average error (z): " << convert(error_z));
            KQP_LOG_ASSERT(logger, error_x < EPSILON, "Error for x is too high");
            KQP_LOG_ASSERT(logger, error_z < EPSILON, "Error for z is too high");
            return 0;
        }



// ------- Generated from kkt_test.py ---
int kkt_test_random() {

// Problem
int n = 5;
int r = 10;
Eigen::MatrixXd g(n,n);
cvxopt::ScalingMatrix w;
w.d.resize(2*r*n);
Eigen::VectorXd x(n*(r+1)), y, z(2*n*r);
x <<  5.885285628983279e-01 ,  8.294231938453709e-01 ,  4.789429532356768e-01 ,  8.075888612596384e-01 ,  9.623558468839565e-01 ,  4.353566829205651e-01 ,  8.588455784808138e-01 ,  7.182423791983076e-01 ,  8.886814943629995e-01 ,  4.623588619564345e-02 ,  9.130986448423635e-01 ,  7.668385355448595e-01 ,  9.623789273619899e-01 ,  9.813193590694200e-01 ,  2.854857307868702e-01 ,  6.700013166466804e-01 ,  1.412735310270223e-01 ,  5.951327636887873e-01 ,  9.195796756956715e-01 ,  1.919733210344334e-01 ,  3.498686863671552e-01 ,  7.974567705000712e-02 ,  1.946563156451762e-01 ,  2.077026664188026e-01 ,  9.600092980546204e-02 ,  9.996980377175202e-01 ,  8.875339549944073e-01 ,  4.637599726257671e-01 ,  7.437024470523893e-01 ,  6.952367933641160e-01 ,  5.224546098893470e-01 ,  4.234867948861591e-01 ,  6.640733237821220e-01 ,  5.555198729672033e-01 ,  2.658898278886870e-01 ,  3.643255465919335e-01 ,  6.272667630222782e-01 ,  6.271288917045859e-01 ,  2.095937611451607e-01 ,  6.097729907070338e-01 ,  8.749287603932815e-01 ,  8.713374496408887e-01 ,  6.522633075694795e-01 ,  7.017267325726095e-02 ,  4.235180899286221e-01 ,  8.902228492414066e-02 ,  5.524979791048534e-02 ,  2.546980854885439e-01 ,  4.568737627876636e-01 ,  7.593995049120491e-01 ,  6.288415398407439e-01 ,  2.824846019348571e-01 ,  6.950690619200575e-01 ,  5.065069608344968e-01 ,  5.075296156707131e-01 ;
z <<  2.636220634323303e-01 ,  4.416456866227010e-01 ,  3.415258701814652e-01 ,  7.265463939090130e-01 ,  4.825965308099226e-01 ,  4.467655781900614e-01 ,  4.770080937980686e-01 ,  4.799113726910161e-01 ,  6.896387006328037e-01 ,  7.198476893232635e-01 ,  8.010969737326715e-01 ,  4.052568816458992e-01 ,  7.935398606099887e-01 ,  9.647259459117272e-01 ,  9.923494116644874e-01 ,  7.206556019502786e-01 ,  6.548864838133828e-02 ,  8.472865278538246e-01 ,  8.364569716615516e-01 ,  1.631781899759521e-02 ,  3.276657287139964e-01 ,  3.220972200771334e-01 ,  7.404421224932046e-01 ,  6.103062881081006e-01 ,  2.823220462034699e-01 ,  1.863655614916040e-01 ,  1.685303919592733e-01 ,  9.545322921951538e-02 ,  7.905727387751030e-01 ,  9.357357476153892e-01 ,  2.198763383182067e-01 ,  7.449126919648740e-01 ,  9.511437223975017e-01 ,  1.917272252554406e-01 ,  5.718944518557192e-01 ,  4.393126809218142e-01 ,  9.748609274965017e-01 ,  8.695919110882055e-01 ,  1.604811394571537e-02 ,  2.013272742878226e-01 ,  8.479840747120673e-01 ,  5.742410733609326e-01 ,  5.228193173754018e-01 ,  8.098135781591498e-01 ,  7.640417052117675e-01 ,  9.547463494211380e-01 ,  3.266982426512590e-01 ,  4.765403015638958e-02 ,  6.922827853132590e-01 ,  5.013804909997255e-02 ,  5.651792240587357e-01 ,  8.597363526759456e-01 ,  3.970282399994222e-01 ,  6.011588397499769e-01 ,  1.714301613920506e-01 ,  1.577357062504808e-01 ,  6.060550718704039e-01 ,  8.644831653341858e-01 ,  9.998379659971401e-01 ,  3.113873096489617e-02 ,  9.209823275856519e-01 ,  5.111182541062665e-01 ,  3.493556684867074e-01 ,  3.974146652165286e-01 ,  5.778894564577020e-01 ,  3.476968859110544e-01 ,  1.455089742241399e-01 ,  8.655634034033419e-01 ,  7.064894398362059e-01 ,  6.098549399645308e-01 ,  7.225590306663150e-01 ,  9.860259041500742e-01 ,  1.750929009451389e-01 ,  8.241687672106883e-01 ,  8.223043071102077e-01 ,  3.433478247795110e-01 ,  5.587765910686205e-01 ,  4.583951040226183e-01 ,  1.943362585979126e-01 ,  4.328975725259948e-01 ,  1.525588709216097e-01 ,  9.322031204414301e-01 ,  1.874633777145578e-01 ,  6.338814511159659e-01 ,  5.700125055668297e-01 ,  9.746576540880918e-01 ,  7.935980998050621e-01 ,  3.601908650928504e-01 ,  3.761162382383360e-01 ,  4.989812229130441e-02 ,  5.183772866050185e-02 ,  3.109734427656744e-01 ,  9.498307423540859e-01 ,  4.954204395411921e-02 ,  1.767432399067472e-01 ,  6.361861121994160e-01 ,  3.604618149695636e-01 ,  1.855770297544811e-01 ,  9.473848480754395e-01 ,  4.276934560990486e-02 ;
g <<  1.901542784951112e+00 ,  1.705578134902462e+00 ,  9.737025195080641e-01 ,  1.491484345212421e+00 ,  1.899076985882573e+00 ,  1.705578134902462e+00 ,  2.102495915993846e+00 ,  1.498420504776956e+00 ,  1.236851733837826e+00 ,  2.207127188738190e+00 ,  9.737025195080641e-01 ,  1.498420504776956e+00 ,  1.451111383108529e+00 ,  5.405111652925707e-01 ,  1.640097457241883e+00 ,  1.491484345212421e+00 ,  1.236851733837826e+00 ,  5.405111652925707e-01 ,  1.360710787966147e+00 ,  1.439290005698094e+00 ,  1.899076985882573e+00 ,  2.207127188738190e+00 ,  1.640097457241883e+00 ,  1.439290005698094e+00 ,  2.682633976423498e+00 ;
w.d.diagonal() <<  9.693881604049188e-01 ,  6.133268205467090e-01 ,  4.426063286462090e-02 ,  4.055144158407464e-03 ,  1.339725270491339e-01 ,  9.410022713958340e-01 ,  3.028605620290723e-01 ,  3.661456016604264e-01 ,  8.981962445391883e-01 ,  3.143638049564507e-01 ,  5.489821840124055e-01 ,  4.360309576241223e-01 ,  6.499417612685054e-02 ,  5.845462257019302e-01 ,  8.440678976619022e-01 ,  1.564189183874064e-01 ,  2.242989686860415e-01 ,  4.128702077148407e-01 ,  3.692486905862902e-02 ,  4.966034986165482e-01 ,  8.179828644296319e-01 ,  6.578909387591091e-01 ,  5.334837356527721e-01 ,  8.551257407736000e-01 ,  1.496881349714015e-01 ,  5.672354768631239e-01 ,  3.741748177480889e-01 ,  6.013045471136395e-01 ,  1.129157018944362e-01 ,  7.755127010728279e-01 ,  9.660583318435267e-02 ,  1.663637457932475e-01 ,  8.074497520247557e-01 ,  9.476939242234907e-01 ,  4.332315025514858e-01 ,  4.140808317483012e-01 ,  2.454818761407551e-01 ,  2.747033919655770e-01 ,  6.172527709741663e-01 ,  1.784604107207253e-01 ,  1.194825043307771e-01 ,  4.557348586810382e-01 ,  1.649378065796322e-01 ,  6.487248312162270e-01 ,  8.210556743614970e-01 ,  7.775113893753993e-01 ,  4.801333902243475e-01 ,  3.475712562208170e-01 ,  4.347105489944344e-01 ,  5.008574909348362e-03 ,  7.125732007896374e-01 ,  3.316572226354955e-01 ,  3.194232377605339e-01 ,  7.992503242021254e-02 ,  4.480559260010161e-01 ,  5.828489673005941e-01 ,  3.905869418428840e-01 ,  8.695455453974028e-01 ,  6.733532167485129e-01 ,  2.414082418108049e-01 ,  5.253538488765902e-01 ,  9.105338176465975e-01 ,  5.201096943214129e-01 ,  6.021048687389493e-01 ,  6.277362381152096e-02 ,  4.893861165217643e-01 ,  4.614412627964344e-01 ,  4.011298800689024e-01 ,  4.204353581465221e-01 ,  5.849350493343958e-01 ,  5.386670484231432e-01 ,  4.898957587909363e-01 ,  1.657964405322077e-01 ,  4.413468174535875e-01 ,  9.686781985609425e-01 ,  4.151736932178327e-01 ,  3.531782978783116e-02 ,  2.830426682370324e-03 ,  5.354184513162129e-01 ,  5.057294182209637e-02 ,  9.274340534219172e-02 ,  1.087564126269691e-01 ,  4.540783303488197e-01 ,  9.926880657637538e-01 ,  4.850553508050713e-01 ,  4.586402838083844e-01 ,  4.365108145371187e-01 ,  5.011121848422556e-01 ,  4.470874692740242e-01 ,  7.262152005666610e-01 ,  8.979415356273188e-01 ,  6.978703473377672e-01 ,  4.233106026677405e-01 ,  6.495291182373754e-01 ,  9.095405975236686e-01 ,  1.536273415359948e-01 ,  2.373424569000443e-01 ,  6.191120001144675e-01 ,  6.870199456481508e-01 ,  6.426002227117794e-01 ;

// Solve
KQP_KKTPreSolver kkt_presolver(g);
boost::shared_ptr<cvxopt::KKTSolver> kktSolver(kkt_presolver.get(w));
kktSolver->solve(x,y,z);


// Solution
Eigen::VectorXd s_x(n*(r+1)), s_z(2*n*r);
s_x <<  1.916314225353135e-01 ,  2.221787076077385e-01 ,  1.653896713317812e-01 ,  -6.483544014018283e-02 ,  -1.149221413372893e-01 ,  -7.382126130568167e-02 ,  1.318636017936666e-01 ,  1.607939674636689e-01 ,  4.069003370969570e-01 ,  -3.442971547080212e-01 ,  1.470516843491386e-01 ,  2.110555923497029e-01 ,  -2.765178525216014e-01 ,  -1.781325450737145e-01 ,  2.012389237779219e-01 ,  -3.845209738196022e-01 ,  3.594946934856500e-01 ,  2.470811125508889e-02 ,  -1.718646774147286e-01 ,  2.558792849409299e-01 ,  2.119190881437352e-01 ,  2.456661135850774e-01 ,  -3.296013128158349e-01 ,  7.001793944247617e-02 ,  8.326110759733751e-02 ,  1.797432727037013e-01 ,  -8.076149174741887e-02 ,  -5.400902727712141e-02 ,  -1.347435757705595e-01 ,  6.094244082512274e-02 ,  -3.675162970585139e-02 ,  1.724836726452127e-01 ,  -2.465085462878327e-01 ,  3.040605518644618e-01 ,  -2.470321751188647e-02 ,  2.373861924815819e-01 ,  -1.860052923453456e-01 ,  -2.643591590131702e-01 ,  2.973434240317328e-02 ,  1.578136903987200e-01 ,  -5.413930897845349e-01 ,  1.575873766379907e-01 ,  6.782258918645361e-02 ,  -2.103641988449516e-01 ,  8.884502029387149e-02 ,  2.988220446241003e-01 ,  -2.146759109067942e-01 ,  2.225117432376691e-01 ,  1.575291072822295e-02 ,  3.207675407179076e-01 ,  -2.765050268763742e-01 ,  -6.455853015061780e-01 ,  -5.124182600629289e-01 ,  -6.616931196669744e-01 ,  -3.709596236508291e-01 ;
s_z <<  -1.843930701780025e-01 ,  -2.973796695862738e-02 ,  1.243253472337317e-01 ,  -4.397895897653117e-03 ,  2.452170046020562e-02 ,  -1.024857143702242e-01 ,  1.212228019008836e-01 ,  -3.503717633367439e-01 ,  -4.841324161691182e-01 ,  -1.460381536305907e-02 ,  -1.223434294891897e+00 ,  6.713474582189646e-02 ,  -7.083323921936842e-02 ,  -2.136704946149638e-01 ,  -9.746001643591605e-01 ,  -3.812173224891939e-01 ,  9.835174942242595e-01 ,  -8.709186866162461e-01 ,  -7.851550063028284e-02 ,  1.988760046746430e-01 ,  -3.216201725262294e-01 ,  1.182900740216188e-01 ,  1.904040247098998e-01 ,  -2.178756526115966e-02 ,  3.591780905713720e-02 ,  -1.579658025172360e-01 ,  1.490790867892860e+00 ,  7.832537777758203e-01 ,  5.193216323373865e-02 ,  -8.068450251350849e-01 ,  9.666115925508814e-01 ,  -1.633835916640862e+00 ,  -2.380543378269077e-01 ,  1.750621569965216e-01 ,  -4.067839241954985e-01 ,  -9.664631053732927e-01 ,  -5.836289664122927e-01 ,  -3.378716634985535e-01 ,  9.978256757698099e-01 ,  6.622566269211094e-02 ,  -2.518022050146309e-01 ,  -1.892397451060602e-01 ,  -4.742614693445731e-01 ,  9.594783081770335e-02 ,  -5.869603206013851e-01 ,  -1.256654732676993e+00 ,  1.111280699541428e+00 ,  6.969865382509227e-01 ,  -1.066055941860798e-01 ,  1.078826491078396e-02 ,  -1.361863939585575e-01 ,  2.420467847549223e-02 ,  8.790208669971115e-01 ,  -5.381493248033883e-02 ,  1.888320542406974e-01 ,  7.711785014972970e-02 ,  4.388109613208401e-01 ,  -2.199665547365594e-01 ,  1.021090997363876e-01 ,  -1.854229163226696e-02 ,  -9.468391969028669e-01 ,  3.794726050292874e-01 ,  -2.181371779532092e-01 ,  1.430745935623458e-01 ,  -9.065764700853580e-02 ,  -9.311928096636477e-01 ,  1.862796178127857e+00 ,  -8.187797728479086e-01 ,  -5.153253487982287e-01 ,  2.903564873835165e-02 ,  -4.346560947650248e-01 ,  -1.934584804177996e-01 ,  4.658752791772910e-02 ,  -2.094899168746377e-01 ,  -3.799854032111618e-01 ,  2.719355215536911e-01 ,  1.712228278597901e-01 ,  4.991743216240536e-03 ,  6.212211859356767e-01 ,  -1.968459840726650e-02 ,  9.401695562847263e-01 ,  -1.049447508732442e+00 ,  1.727594796260938e-01 ,  3.343167223030398e-01 ,  -4.613001362762150e-01 ,  -1.004635770116181e+00 ,  -7.652000351890937e-01 ,  -2.237657902459315e-01 ,  7.052562317253354e-01 ,  6.594122394912442e-01 ,  -3.527242910613257e-01 ,  7.052875039842794e-01 ,  -8.730938719122974e-01 ,  6.185817780705976e-01 ,  3.112136003699260e-01 ,  -3.961471967845341e-01 ,  2.968182623115427e-01 ,  8.873240600158699e-01 ,  -3.929126357831931e-01 ,  1.009893547842582e+00 ;

            double error_x = (x - s_x).norm() / (double)x.rows();
            double error_z = (z - s_z).norm() / (double)z.rows();

            KQP_LOG_INFO(logger, "Average error (x): " << convert(error_x));
            KQP_LOG_INFO(logger, "Average error (z): " << convert(error_z));
            KQP_LOG_ASSERT(logger, error_x < EPSILON, "Error for x is too high");
            KQP_LOG_ASSERT(logger, error_z < EPSILON, "Error for z is too high");
            return 0;
        }

